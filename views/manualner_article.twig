{% extends "base.twig" %} {% block title %}手動 NER 輸入{% endblock title %} {%
block head %}
{{ parent() }}
<script>
    document.addEventListener("DOMContentLoaded", function () {
        let input_text_json = {};
        let input_text;
        let output_json = {};
        let no;
        let category_json = {};

        // $.ajax(
        //     url: "/api/output/l",
        // }).then((res) => {
        //     let options = res.map((no) => {
        //         return $(`<option value='${no}'>${no}</option>`);
        //     });
        //     $("#ner-data-no").append(options).trigger("change");
        // });
        // $.ajax({
        //     url: "/api/output/l",
        // }).then((res) => {

        let res = [1, 2];
        let options = res.map((no) => {
            return $(`<option value='${no}'>${no}</option>`);
        });
        // });

        $.ajax({
            url: "/api/ner/category",
        }).then((res) => {
            let options = res.reverse().map((option) => {
                return $(
                    `<option value='${option.category_tag}'>${option.category_name}</option>'`
                );
            });
            $("#category").append(options);
            $("#category")
                .children()
                .map((ind, c) => {
                    $("#category-container").append(
                        `<button class='category-btn' value=${c.value}>${c.text}</button>`
                    );
                });

            $("button.category-btn").on("click", (e) => {
                e.preventDefault();
                $("button.category-btn").removeClass("selected");
                $("#category").val(e.target.value).change();
                $(e.target).addClass("selected");
            });
        });

        $("#next_btn").on("click", (e) => {
            let selected_option = $("#ner-data-no > option:selected");
            if (selected_option.next().length < 1) return;
            selected_option
                .attr("selected", false)
                .next("option")
                .attr("selected", true)
                .trigger("change");
        });

        $("#prev_btn").on("click", (e) => {
            let selected_option = $("#ner-data-no > option:selected");
            if (selected_option.prev().length < 1) return;
            selected_option
                .attr("selected", false)
                .prev("option")
                .attr("selected", true)
                .trigger("change");
        });

        $("#ner-data-no").on("change", function (e) {
            id = e.target.value;

            $.ajax({
                url: `/api/data/article/${id}`,
                type: "get",
                success: function (res) {
                    const content = res["article_content"];
                    const json = JSON.parse(content);
                    // input_text = res.測資文字;
                    $("#input-transcript").text(json["JFULLX"]["JFULLCONTENT"]);
                    // input_text_json = {};
                    // let res_json = JSON.parse(res.測資手動NER);
                    // for (let i = 0; i < input_text.length; i++) {
                    //     input_text_json[i] = "O";
                    // }
                    // $("#json").html(JSON.stringify(res_json, null, 4));
                },
            });
        });

        $("#ner-data-no").append(options).trigger("change");
        // $("#random-ner-data").on("", function () {});

        // $("#object").on("change", function (e) {
        //     // console.log(e.target.value);
        // });

        // $("#input-transcript").on("mouseup", function (e) {
        //     const category = $("#category").val();
        //     const range = document.getSelection();
        //     const sel = range.toString();
        //     const start = Math.min(range.anchorOffset, range.focusOffset);
        //     const end = Math.max(range.anchorOffset, range.focusOffset);
        //     const len = end - start;
        //     let tags = [];

        //     if (sel.length == 0) return;
        //     // console.table({
        //     //   selection: sel,
        //     //   selection2: input_text.substring(start, end),
        //     //   start: start,
        //     //   end: end,
        //     //   length: len
        //     // })
        //     tags = tag(len, category);
        //     let j = 0;
        //     for (let i of r(start, end - 1)) {
        //         input_text_json[i] = tags[j];
        //         j++;
        //     }

        //     let values = [];
        //     for (let i in input_text_json) values.push(input_text_json[i]);

        //     output_json = {
        //         tokens: input_text.split(""),
        //         tags: values,
        //     };

        //     $("#tokens_json").html(JSON.stringify(output_json.tokens, null, 4));
        //     $("#tags_json").html(JSON.stringify(output_json.tags, null, 4));
        //     $("#json").html(JSON.stringify(output_json, null, 4));
        // });

        // r = (start, stop, step = 1) =>
        //     Array.from(
        //         { length: (stop - start) / step + 1 },
        //         (_, i) => start + i * step
        //     );

        // function tag(len, name) {
        //     let tags = [];
        //     const pre = "B" + "-" + name;
        //     const int = "I" + "-" + name;
        //     const suf = "E" + "-" + name;
        //     const single = "S" + "-" + name;
        //     if (name == "O") {
        //         for (let i = 0; i < len; i++) tags.push("O");
        //         return tags;
        //     }
        //     if (len == 1) {
        //         tags.push(single);
        //     } else {
        //         tags.push(pre);
        //         for (let i = 0; i < len - 2; i++) tags.push(int);
        //         tags.push(suf);
        //     }

        //     return tags;
        // }

        // $("#update").on("click", function (e) {
        //     e.preventDefault();
        //     console.log(
        //         JSON.stringify({
        //             no: no,
        //             json: output_json,
        //         })
        //     );
        //     $.ajax({
        //         url: `/api/data`,
        //         type: "put",
        //         data: JSON.stringify({
        //             no: no,
        //             json: output_json,
        //         }),
        //         success: function () {
        //             $("#tokens_json").text("");
        //             $("#tags_json").text("");
        //         },
        //         contentType: "application/json; charset=utf-8",
        //     });
        // });
    });
</script>
{% endblock head %} {% block main %}
<header class="min-h-60">
    <label for="ner-data-no">請選擇測資編號： </label>
    <select name="ner-data-no" id="ner-data-no"></select>
    <button id="prev_btn">前一個</button>
    <button id="next_btn">後一個</button>

    <br />

    <label for="category">請選擇類別：</label>
    <select name="category" id="category" style="display: none"></select>
    <div id="category-container" class="flex flex-row flex-wrap gap-2"></div>

    <div class="mb-4">
        <button id="update">更新測資</button>
        <pre id="input-transcript" class="text-normal tracking-widest"></pre>
    </div>
</header>
<div>
    <div class="flex flex-row">
        <div style="width: 100%">
            <p>tokens:</p>
            <pre id="tokens_json"></pre>
        </div>
        <div style="width: 100%">
            <p>tags:</p>
            <pre id="tags_json"></pre>
        </div>
    </div>
    <pre id="json"></pre>
</div>

{% endblock main %}
