{% extends "base.twig" %}
{% block title %}手動 NER 輸入{% endblock title %}
{% block head %}
{{ parent() }}
<script>
  document.addEventListener("DOMContentLoaded", function () {
    let input_text_json = {};
    let input_text;
    let output_json = {};
    let no;
    $.ajax({
      url: '/api/output/l',
    }).then((res) => {
      let options = res.map(no => {
        return $(`<option value='${no}'>${no}</option>`);
      });
      $('#ner-data-no').append(options).trigger('change');
    });

    $('#prev_btn').on('click', (e) => {
      let selected_option = $('#ner-data-no > option:selected');
      if (selected_option.prev().length !== 1) return;
      selected_option.attr('selected', false).prev('option').attr('selected', true).trigger('change');
    });

    $('#next_btn').on('click', (e) => {
      let selected_option = $('#ner-data-no > option:selected');
      if (selected_option.next().length !== 1) return;
      selected_option.attr('selected', false).next('option').attr('selected', true).trigger('change');
    });

    $('#ner-data-no').on('change', function (e) {
      no = e.target.value;

      $.ajax({
        url: `/api/data/${no}`,
        type: "get",
        data: JSON.stringify({ no: no }),
        success: function (res) {
          input_text = res.測資文字;
          $('#input-transcript').text(input_text);
          input_text_json = {};
          let res_json = JSON.parse(res.測資手動NER)
          for (let i = 0; i < input_text.length; i++) {
            input_text_json[i] = "O";
          }
          $('#json').html(JSON.stringify(res_json, null, 4))
        }
      })
    });

    $('#random-ner-data').on('', function () {

    });

    $('#object').on('change', function (e) {
      // console.log(e.target.value);
    });

    $('#input-transcript').on('mouseup', function (e) {
      const category = $('#category').val();
      const range = document.getSelection();
      const sel = range.toString();
      const start = Math.min(range.anchorOffset, range.focusOffset);
      const end = Math.max(range.anchorOffset, range.focusOffset);
      const len = end - start;
      let tags = [];

      if (sel.length == 0) return;
      // console.table({
      //   selection: sel,
      //   selection2: input_text.substring(start, end),
      //   start: start,
      //   end: end,
      //   length: len
      // })
      tags = tag(len, category);
      let j = 0;
      for (let i of r(start, end - 1)) {
        input_text_json[i] = tags[j];
        j++;
      }

      let values = [];
      for (let i in input_text_json) values.push(input_text_json[i]);

      output_json = {
        tokens: input_text.split(''),
        tags: values
      }

      $('#tokens_json').html(JSON.stringify(output_json.tokens, null, 4))
      $('#tags_json').html(JSON.stringify(output_json.tags, null, 4))
      $('#json').html(JSON.stringify(output_json, null, 4))
    });

    r = (start, stop, step = 1) => Array.from({ length: (stop - start) / step + 1 }, (_, i) => start + (i * step));

    function tag(len, name) {
      let tags = [];
      const pre = "B" + "-" + name;
      const int = "I" + "-" + name;
      const suf = "E" + "-" + name;
      const single = "S" + "-" + name;
      if (name == "O") {
        for (let i = 0; i < len; i++) tags.push("O")
        return tags;
      }
      if (len == 1) { tags.push(single) }
      else {
        tags.push(pre);
        for (let i = 0; i < len - 2; i++) tags.push(int)
        tags.push(suf);
      }

      return tags
    }

    $('#update').on('click', function (e) {
      e.preventDefault();
      console.log(
        JSON.stringify({
          no: no,
          json: output_json
        })
      );
      $.ajax({
        url: `/api/data`,
        type: 'put',
        data: JSON.stringify({
          no: no,
          json: output_json
        }),
        success: function () {
          $('#tokens_json').text('');
          $('#tags_json').text('');
        },
        contentType: 'application/json; charset=utf-8'
      })
    });

    $('#category').children().map((ind, c) => {
      $('#category').after(`<button class='category-btn' value=${c.value}>${c.text}</button>`)
    })

    $('button.category-btn').on("click", (e) => {
      e.preventDefault();
      $('#category').val(e.target.value).change();
    })

  })


</script>
{% endblock head %}
{% block main %}
<ul>
  {# <li>目前總共有 <span>{{ allRecords }} 筆測資</span></li> #}
</ul>
<label for="ner-data-no">請選擇測資編號： </label>
<select name="ner-data-no" id="ner-data-no"></select>
<button type="button" id="prev_btn">前一個</button>
<button type="button" id="next_btn">後一個</button>

<br>

<label for="category">請選擇類別：</label>
<select name="category" id="category" style="display: none;">
  <option value="O">其他</option>
  <option value="CAMPUS">校區</option>
  <option value="LOCATION">地點</option>
  <option value="CATEGORY">選別</option>
  <option value="CREDIT">學分</option>
  <option value="SEMESTER">學期</option>
  <option value="CLASS">班級</option>
  <option value="CURRICULUM">課表</option>
  <option value="DEPARTMENT">系別</option>
  <option value="EDUCATION">制別</option>
  <option value="GRADUATE">畢業班</option>
  <option value="INTERNSHIP">實習課</option>
  <option value="GRADE">年級</option>
  <option value="SUBJECT">科目</option>
  <option value="PEOPLE">老師</option>
  <option value="TIME">時間</option>
</select>
<div>
  <button id="update">更新</button>
  <h1 id="input-transcript"></h1>
</div>

<div style="display: flex; flex-direction: row;">
  <div style="width: 100%;">
    <p>tokens: </p>
    <pre id="tokens_json"></pre>
  </div>
  <div style="width: 100%;">
    <p>tags: </p>
    <pre id="tags_json"></pre>
  </div>
</div>
<pre id="json"></pre>
{% endblock main %}